<?xml version="1.0" encoding="UTF-8"?>
<project name="BDUAPIClient" basedir="." default="jar">

    <property name="lib.dir" value="dep"/>
    <property name="src.dir" value="src/main"/>
    <property name="test.dir" value="src/test"/>
    <property name="build.dir" value="build"/>
    <property name="classes.dir" value="${build.dir}/main/classes"/>
    <property name="test.classes.dir" value="${build.dir}/test/classes"/>
    <property name="jar.dir" value="${build.dir}/jar"/>
    <property name="dist.lib" value="${build.dir}/lib"/>
    <property name="main-class" value="com.bcd.bdu.BDUAPIClient"/>

    <!-- INCLUDE Library -->
    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>
    <path id="mapr">
        <fileset dir="/opt/mapr/hbase/hbase-1.1.8/lib" includes="**/*.jar"/>
        <fileset dir="/opt/mapr/kafka/kafka-1.0.1/libs" includes="**/*.jar"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/etc/hadoop" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/common/lib/">
            <include name="**/*.jar"/>
            <exclude name="**/slf4j-log4j12-1.7.12.jar"/>
        </fileset>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/common/" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/hdfs" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/hdfs/lib" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/hdfs" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/yarn/lib/" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/yarn" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/mapreduce/lib" includes="**/*.*"/>
        <fileset dir="/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/mapreduce" includes="**/*.*"/>
    </path>
    <path id="application" location="${jar.dir}/${ant.project.name}.jar"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>
    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac includeantruntime="false" srcdir="${src.dir}" destdir="${classes.dir}">
            <classpath refid="classpath"/>
            <classpath refid="mapr"/>
        </javac>
        <copy file="conf/log4j2.xml" todir="${classes.dir}"/>
        <copy file="conf/application.properties" todir="${classes.dir}"/>
        <copy file="conf/BookingData.xslt" todir="${classes.dir}"/>
        <copy file="conf/OneLinerXml.xslt" todir="${classes.dir}"/>
        <copy file="conf/CompressCompleat.xslt" todir="${classes.dir}"/>
    </target>
    <target name="test-compile">
        <mkdir dir="${test.classes.dir}"/>
        <javac includeantruntime="false" srcdir="${test.dir}" destdir="${test.classes.dir}">
            <classpath refid="classpath"/>
        </javac>
        <copy file="conf/log4j2.properties" todir="${test.classes.dir}"/>
    </target>

    <target name="copy-dependencies">
        <mkdir dir="${dist.lib}"/>
        <jar jarfile="${dist.lib}/dependencies-all.jar" >
            <zipgroupfileset dir="${lib.dir}">
                <include name="**/*.jar"/>
            </zipgroupfileset>
        </jar>
    </target>
    <pathconvert property="classpath.name" pathsep=" ">
        <path refid="mapr" />
    </pathconvert>
    <target name="jar" depends="clean, compile, copy-dependencies">
        <mkdir dir="${jar.dir}"/>
        <mkdir dir="${dist.lib}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                <attribute name="Class-Path" value="${classpath.name}" />
            </manifest>
            <zipfileset src="${dist.lib}/dependencies-all.jar">
                    <exclude name="META-INF/*.SF"/>
                    <exclude name="log4j.properties"/>
            </zipfileset>
        </jar>
    </target>

    <target name="run" depends="jar">
        <java jar="${jar.dir}/${ant.project.name}.jar" fork="true">
            <classpath>
                <path refid="mapr"/>
                <path refid="classpath"/>
                <path refid="application"/>
                <pathelement location="${jar.dir}"/>
            </classpath>
        </java>
    </target>

    <target name="clean-build" depends="clean,jar"/>
    <target name="main" depends="clean,run"/>
    <target name="junit" depends="clean,test-compile">
        <junit>
            <classpath>
                <path refid="classpath"/>
                <path location="${test.classes.dir}"/>
            </classpath>
            <formatter type="plain" usefile="false" /> 
            <formatter type="plain" />
            <batchtest fork="yes">
                <fileset dir="${test.dir}" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>
</project>
